plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'me.github.lilyvxv'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'codemc'
        url = 'https://repo.codemc.org/repository/maven-public/'
    }
}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.20.1-R0.1-SNAPSHOT'

    compileOnly "dev.jorel:commandapi-annotations:9.1.0"
    annotationProcessor "dev.jorel:commandapi-annotations:9.1.0"
    implementation "dev.jorel:commandapi-bukkit-shade:9.1.0"

    implementation "de.tr7zw:item-nbt-api:2.11.3"
}

shadowJar {
    dependencies {
        include dependency("dev.jorel:commandapi-bukkit-shade:9.1.0")
        include dependency("de.tr7zw:item-nbt-api:2.11.3")
    }

    relocate "de.tr7zw.changeme.nbtapi", "me.github.lilyvxv.nbtapi"
    relocate "dev.jorel.commandapi", "me.github.lilyvxv.commandapi"
}

build {
    dependsOn(shadowJar)
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
